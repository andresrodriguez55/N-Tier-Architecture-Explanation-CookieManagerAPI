// <auto-generated />
using System;
using CookiesSettings.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CookiesSettings.Migrations
{
    [DbContext(typeof(CookieSettingsContext))]
    [Migration("20220815120606_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CookiesSettings.Models.Cookies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("WebSiteCookieTypeDefinitionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WebSiteCookieTypeDefinitionId");

                    b.ToTable("Cookies");
                });

            modelBuilder.Entity("CookiesSettings.Models.WebsiteCookieTypeDefinitions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CookieType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteId");

                    b.ToTable("WebsiteCookieTypeDefinitions");
                });

            modelBuilder.Entity("CookiesSettings.Models.Websites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Websites");
                });

            modelBuilder.Entity("CookiesSettings.Models.Cookies", b =>
                {
                    b.HasOne("CookiesSettings.Models.WebsiteCookieTypeDefinitions", "WebSiteCookieTypeDefinition")
                        .WithMany("Cookies")
                        .HasForeignKey("WebSiteCookieTypeDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebSiteCookieTypeDefinition");
                });

            modelBuilder.Entity("CookiesSettings.Models.WebsiteCookieTypeDefinitions", b =>
                {
                    b.HasOne("CookiesSettings.Models.Websites", "Website")
                        .WithMany("WebSiteCookieTypeDefinitions")
                        .HasForeignKey("WebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Website");
                });

            modelBuilder.Entity("CookiesSettings.Models.WebsiteCookieTypeDefinitions", b =>
                {
                    b.Navigation("Cookies");
                });

            modelBuilder.Entity("CookiesSettings.Models.Websites", b =>
                {
                    b.Navigation("WebSiteCookieTypeDefinitions");
                });
#pragma warning restore 612, 618
        }
    }
}
